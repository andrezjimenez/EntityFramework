// <auto-generated />
using System;
using Entityframeworkproject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace entityframework.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20220903025111_InitialData2")]
    partial class InitialData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entityframeworkproject.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("3e1da43b-c389-417d-bc6f-9c0be3b28eb1"),
                            Nombre = "Actividades Pendientes",
                            Peso = 20
                        },
                        new
                        {
                            CategoryId = new Guid("3e1da43b-c389-417d-bc6f-9c0be3b28eb2"),
                            Nombre = "Actividades Personales",
                            Peso = 50
                        });
                });

            modelBuilder.Entity("Entityframeworkproject.Models.Tarea", b =>
                {
                    b.Property<Guid>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrioridadTarea")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TareaId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tarea", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = new Guid("b21da43b-c389-417d-bc6f-9c0be3b28eb2"),
                            CategoryId = new Guid("3e1da43b-c389-417d-bc6f-9c0be3b28eb1"),
                            Comments = "Esta es una prueba",
                            Descripcion = "Prueba de Descripcion 1",
                            FechaCreacion = new DateTime(2022, 9, 2, 21, 51, 11, 178, DateTimeKind.Local).AddTicks(8154),
                            PrioridadTarea = 1,
                            Titulo = "Tarea 1"
                        },
                        new
                        {
                            TareaId = new Guid("b11da43b-c389-417d-bc6f-9c0be3b28eb2"),
                            CategoryId = new Guid("3e1da43b-c389-417d-bc6f-9c0be3b28eb2"),
                            Comments = "Esta es una prueba 2",
                            Descripcion = "Prueba de Descripcion 2",
                            FechaCreacion = new DateTime(2022, 9, 2, 21, 51, 11, 178, DateTimeKind.Local).AddTicks(8169),
                            PrioridadTarea = 0,
                            Titulo = "Tarea 02"
                        });
                });

            modelBuilder.Entity("Entityframeworkproject.Models.Tarea", b =>
                {
                    b.HasOne("Entityframeworkproject.Models.Category", "Categoria")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Entityframeworkproject.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
